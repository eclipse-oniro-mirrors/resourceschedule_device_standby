# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

@!namespace("@ohos.resourceschedule.deviceStandby", "deviceStandby")

@!sts_inject("""
static { loadLibrary("device_standby_ani.z"); }
""")

enum ResourceType: i32 {
    NETWORK = 1,
    RUNNING_LOCK = 1 << 1,
    TIMER = 1 << 2,
    WORK_SCHEDULER = 1 << 3,
    AUTO_SYNC = 1 << 4,
    PUSH = 1 << 5,
    FREEZE = 1 << 6
}

struct ResourceRequest {
    resourceTypes: i32;
    uid: i32;
    name: String;
    duration: i32;
    reason: String;
}

struct ExemptedAppInfo {
    resourceTypes: i32;
    name: String;
    duration: i32;
}

@gen_async("getExemptedApps")
@gen_promise("getExemptedApps")
function getExemptedAppsSync(resourceTypes: i32): Array<ExemptedAppInfo>;

function requestExemptionResource(request: ResourceRequest): void; 

function releaseExemptionResource(request: ResourceRequest): void;

function isDeviceInStandby(): bool;