# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/idl_tool/idl.gni")
import("//build/ohos.gni")
import("//foundation/resourceschedule/device_standby/standby_service.gni")

idl_interface_sources = [
  "${target_gen_dir}/standby_service_proxy.cpp",
  "${target_gen_dir}/standby_service_stub.cpp",
]

idl_gen_interface("standby_service_interface") {
  src_idl = rebase_path("IStandbyService.idl")
  dst_file = string_join(",", idl_interface_sources)
  log_domainid = "0xD001718"
  log_tag = "StandbyService"
}

config("standby_innerkits_public_config") {
  include_dirs = [
    "include",
    "${target_gen_dir}",
    "${standby_service_frameworks_path}/include",
    "${standby_utils_common_path}/include",
  ]
}

ohos_shared_library("standby_innerkits") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  cflags_cc = [
    "-fstack-protector-strong",
  ]
  output_values = get_target_outputs(":standby_service_interface")
  sources = [
    "src/allow_info.cpp",
    "src/allow_type.cpp",
    "src/resource_request.cpp",
    "src/standby_service_client.cpp",
    "src/standby_service_subscriber_stub.cpp",
  ]
  sources += filter_include(output_values, [ "*_proxy.cpp" ])

  public_configs = [ ":standby_innerkits_public_config" ]

  deps = [
    ":standby_service_interface",
    "${standby_service_frameworks_path}:standby_fwk",
    "${standby_utils_common_path}:standby_utils_common",
  ]

  install_images = [
    "system",
    "updater",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  public_external_deps = [ "resource_schedule_service:resschedsvc" ]
  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "resourceschedule"
  part_name = "${standby_service_part_name}"

  version_script = "libstandby_innerkits.versionscript"
}

ohos_source_set("device_standby_stub") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  public_configs = [ ":standby_innerkits_public_config" ]
  output_values = get_target_outputs(":standby_service_interface")
  sources = filter_include(output_values, [ "*_stub.cpp" ])
  deps = [ ":standby_service_interface" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]
  subsystem_name = "resourceschedule"
  part_name = "${standby_service_part_name}"
}
