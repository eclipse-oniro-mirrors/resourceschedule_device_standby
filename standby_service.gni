# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")

standby_service_root_path = "//foundation/resourceschedule/device_standby"

standby_service_part_name = "device_standby"

standby_interfaces_path = "${standby_service_root_path}/interfaces"

standby_innerkits_path = "${standby_interfaces_path}/innerkits"

standby_plugins_path = "${standby_service_root_path}/plugins"

standby_service_constraints_path = "${standby_plugins_path}/extend_constraints"

standby_service_strategy_path = "${standby_plugins_path}/strategy"

standby_service_message_listener_path =
    "${standby_plugins_path}/message_listener"

standby_service_standby_state_path = "${standby_plugins_path}/standby_state"

standby_service_utils_path = "${standby_service_root_path}/utils"

standby_utils_common_path = "${standby_service_utils_path}/common"

standby_utils_policy_path = "${standby_service_utils_path}/policy"

standby_service_frameworks_path = "${standby_service_root_path}/frameworks"

standby_service_path = "${standby_service_root_path}/services"

declare_args() {
  enable_standby_configpolicy = true
  if (defined(global_parts_info) &&
      !defined(global_parts_info.customization_config_policy)) {
    enable_standby_configpolicy = false
  }

  enable_background_task_mgr = true
  if (defined(global_parts_info) &&
      !defined(global_parts_info.resourceschedule_background_task_mgr)) {
    enable_background_task_mgr = false
  }

  standby_power_manager_enable = true
  if (defined(global_parts_info) &&
      !defined(global_parts_info.powermgr_power_manager)) {
    standby_power_manager_enable = false
  }

  standby_battery_manager_enable = true
  if (defined(global_parts_info) &&
      !defined(global_parts_info.powermgr_battery_manager)) {
    standby_battery_manager_enable = false
  }

  standby_multimodalinput_input_enable = true
  if (defined(global_parts_info) &&
      !defined(global_parts_info.multimodalinput_input)) {
    standby_multimodalinput_input_enable = false
  }

  standby_sensors_sensor_enable = true
  if (defined(global_parts_info) &&
      !defined(global_parts_info.sensors_sensor)) {
    standby_sensors_sensor_enable = false
  }

  standby_communication_netmanager_base_enable = true
  if (defined(global_parts_info) &&
      !defined(global_parts_info.communication_netmanager_base)) {
    standby_communication_netmanager_base_enable = false
  }

  standby_rss_work_scheduler_enable = true
  if (defined(global_parts_info) &&
      !defined(global_parts_info.resourceschedule_work_scheduler)) {
    standby_rss_work_scheduler_enable = false
  }

  device_standby_access_token_enable = true
  if (defined(global_parts_info) &&
      !defined(global_parts_info.security_access_token)) {
    device_standby_access_token_enable = false
  }

  # features
  device_standby_plugin_enable = true
}
